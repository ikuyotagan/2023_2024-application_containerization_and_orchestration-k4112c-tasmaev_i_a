/*
 * This file is generated by jOOQ.
 */
package ru.itmo.ict.todolist.generated.jooq.tables.records


import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl

import ru.itmo.ict.todolist.generated.jooq.tables.Tasks


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class TasksRecord private constructor() : UpdatableRecordImpl<TasksRecord>(Tasks.TASKS) {

    open var id: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var title: String
        set(value): Unit = set(1, value)
        get(): String = get(1) as String

    open var description: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var completed: Boolean?
        set(value): Unit = set(3, value)
        get(): Boolean? = get(3) as Boolean?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    /**
     * Create a detached, initialised TasksRecord
     */
    constructor(id: Int? = null, title: String, description: String? = null, completed: Boolean? = null): this() {
        this.id = id
        this.title = title
        this.description = description
        this.completed = completed
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised TasksRecord
     */
    constructor(value: ru.itmo.ict.todolist.generated.jooq.tables.pojos.Tasks?): this() {
        if (value != null) {
            this.id = value.id
            this.title = value.title
            this.description = value.description
            this.completed = value.completed
            resetChangedOnNotNull()
        }
    }
}
